Token At 1:1 < Identifier, using >
Token At 1:6 < Identifier, namespace >
Token At 1:15 < Identifier, std >
Token At 1:18 < Delimiter, ; >
Token At 3:1 < Identifier, const >
Token At 3:6 < Keyword, int >
Token At 3:9 < Identifier, maxn >
Token At 3:13 < Operator, = >
Token At 3:14 < Integer Literal, 200005 >
Token At 3:20 < Delimiter, ; >
Token At 5:1 < Keyword, int >
Token At 5:4 < Identifier, n >
Token At 5:5 < Delimiter, , >
Token At 5:6 < Identifier, k >
Token At 5:7 < Delimiter, , >
Token At 5:8 < Identifier, a >
Token At 5:9 < Delimiter, [ >
Token At 5:10 < Identifier, maxn >
Token At 5:14 < Delimiter, ] >
Token At 5:15 < Delimiter, , >
Token At 5:16 < Identifier, havediff >
Token At 5:24 < Delimiter, [ >
Token At 5:25 < Identifier, maxn >
Token At 5:29 < Delimiter, ] >
Token At 5:30 < Delimiter, ; >
Token At 10:1 < Keyword, int >
Token At 10:4 < Identifier, check >
Token At 10:9 < Delimiter, ( >
Token At 10:10 < Keyword, int >
Token At 10:13 < Identifier, x >
Token At 10:14 < Delimiter, ) >
Token At 11:1 < Delimiter, { >
Token At 12:5 < Keyword, int >
Token At 12:8 < Identifier, ans >
Token At 12:11 < Operator, = >
Token At 12:12 < Integer Literal, 0 >
Token At 12:13 < Delimiter, ; >
Token At 13:5 < Identifier, x >
Token At 13:6 < Operator, = >
Token At 13:7 < Error, Invalid Token: "lol >
Token At 14:5 < Keyword, int >
Token At 14:8 < Identifier, diff >
Token At 14:12 < Operator, = >
Token At 14:13 < Integer Literal, 0 >
Token At 14:14 < Delimiter, ; >
Token At 15:5 < Keyword, for >
Token At 15:8 < Delimiter, ( >
Token At 15:9 < Keyword, int >
Token At 15:12 < Identifier, i >
Token At 15:13 < Operator, = >
Token At 15:14 < Integer Literal, 0 >
Token At 15:15 < Delimiter, ; >
Token At 15:16 < Identifier, i >
Token At 15:17 < Operator, <= >
Token At 15:19 < Identifier, n >
Token At 15:20 < Delimiter, ; >
Token At 15:21 < Identifier, i >
Token At 15:22 < Operator, ++ >
Token At 15:24 < Delimiter, ) >
Token At 16:9 < Identifier, havediff >
Token At 16:17 < Delimiter, [ >
Token At 16:18 < Identifier, i >
Token At 16:19 < Delimiter, ] >
Token At 16:20 < Operator, = >
Token At 16:21 < Identifier, maxn >
Token At 16:25 < Delimiter, ; >
Token At 17:5 < Keyword, int >
Token At 17:8 < Identifier, mindiff >
Token At 17:15 < Operator, = >
Token At 17:16 < Identifier, maxn >
Token At 17:20 < Delimiter, ; >
Token At 18:5 < Identifier, havediff >
Token At 18:13 < Delimiter, [ >
Token At 18:14 < Integer Literal, 0 >
Token At 18:15 < Delimiter, ] >
Token At 18:16 < Operator, = >
Token At 18:17 < Integer Literal, 0 >
Token At 18:18 < Delimiter, ; >
Token At 19:5 < Keyword, for >
Token At 19:8 < Delimiter, ( >
Token At 19:9 < Keyword, int >
Token At 19:12 < Identifier, i >
Token At 19:13 < Operator, = >
Token At 19:14 < Integer Literal, 1 >
Token At 19:15 < Delimiter, ; >
Token At 19:16 < Identifier, i >
Token At 19:17 < Operator, <= >
Token At 19:19 < Identifier, n >
Token At 19:20 < Delimiter, ; >
Token At 19:21 < Identifier, i >
Token At 19:22 < Operator, ++ >
Token At 19:24 < Delimiter, ) >
Token At 20:5 < Delimiter, { >
Token At 21:9 < Keyword, if >
Token At 21:11 < Delimiter, ( >
Token At 21:12 < Identifier, a >
Token At 21:13 < Delimiter, [ >
Token At 21:14 < Identifier, i >
Token At 21:15 < Operator, - >
Token At 21:16 < Integer Literal, 1 >
Token At 21:17 < Delimiter, ] >
Token At 21:18 < Operator, >= >
Token At 21:20 < Identifier, x >
Token At 21:21 < Delimiter, ) >
Token At 22:13 < Identifier, diff >
Token At 22:17 < Operator, ++ >
Token At 22:19 < Delimiter, ; >
Token At 23:9 < Keyword, else >
Token At 24:13 < Identifier, diff >
Token At 24:17 < Operator, -- >
Token At 24:19 < Delimiter, ; >
Token At 25:9 < Identifier, havediff >
Token At 25:17 < Delimiter, [ >
Token At 25:18 < Identifier, i >
Token At 25:19 < Delimiter, ] >
Token At 25:20 < Operator, = >
Token At 25:21 < Identifier, diff >
Token At 25:25 < Delimiter, ; >
Token At 26:9 < Keyword, if >
Token At 26:11 < Delimiter, ( >
Token At 26:12 < Identifier, i >
Token At 26:13 < Operator, >= >
Token At 26:15 < Identifier, k >
Token At 26:16 < Delimiter, ) >
Token At 27:13 < Identifier, mindiff >
Token At 27:20 < Operator, = >
Token At 27:21 < Delimiter, ( >
Token At 27:22 < Identifier, mindiff >
Token At 27:29 < Operator, < >
Token At 27:30 < Identifier, havediff >
Token At 27:38 < Delimiter, [ >
Token At 27:39 < Identifier, i >
Token At 27:40 < Operator, - >
Token At 27:41 < Identifier, k >
Token At 27:42 < Delimiter, ] >
Token At 27:43 < Delimiter, ) >
Token At 27:44 < Operator, ? >
Token At 27:45 < Identifier, mindiff >
Token At 27:52 < Operator, : >
Token At 27:53 < Identifier, havediff >
Token At 27:61 < Delimiter, [ >
Token At 27:62 < Identifier, i >
Token At 27:63 < Operator, - >
Token At 27:64 < Identifier, k >
Token At 27:65 < Delimiter, ] >
Token At 27:66 < Delimiter, ; >
Token At 28:9 < Keyword, if >
Token At 28:11 < Delimiter, ( >
Token At 28:12 < Identifier, diff >
Token At 28:16 < Operator, > >
Token At 28:17 < Identifier, mindiff >
Token At 28:24 < Delimiter, ) >
Token At 29:13 < Keyword, return >
Token At 29:19 < Integer Literal, 1 >
Token At 29:20 < Delimiter, ; >
Token At 30:5 < Delimiter, } >
Token At 31:5 < Keyword, return >
Token At 31:11 < Integer Literal, 0 >
Token At 31:12 < Delimiter, ; >
Token At 32:1 < Delimiter, } >
Token At 34:1 < Keyword, int >
Token At 34:4 < Identifier, main >
Token At 34:8 < Delimiter, ( >
Token At 34:9 < Delimiter, ) >
Token At 35:1 < Delimiter, { >
Token At 36:5 < Keyword, int >
Token At 36:8 < Identifier, lo >
Token At 36:10 < Operator, = >
Token At 36:11 < Integer Literal, 1 >
Token At 36:12 < Delimiter, , >
Token At 36:13 < Identifier, hi >
Token At 36:15 < Operator, = >
Token At 36:16 < Identifier, n >
Token At 36:17 < Delimiter, , >
Token At 36:18 < Identifier, mid >
Token At 36:21 < Delimiter, ; >
Token At 37:5 < Keyword, while >
Token At 37:10 < Delimiter, ( >
Token At 37:11 < Identifier, lo >
Token At 37:13 < Operator, < >
Token At 37:14 < Identifier, hi >
Token At 37:16 < Delimiter, ) >
Token At 38:5 < Delimiter, { >
Token At 39:9 < Identifier, mid >
Token At 39:12 < Operator, = >
Token At 39:13 < Delimiter, ( >
Token At 39:14 < Identifier, lo >
Token At 39:16 < Operator, + >
Token At 39:17 < Identifier, hi >
Token At 39:19 < Operator, + >
Token At 39:20 < Integer Literal, 1 >
Token At 39:21 < Delimiter, ) >
Token At 39:22 < Operator, / >
Token At 39:23 < Integer Literal, 2 >
Token At 39:24 < Delimiter, ; >
Token At 40:9 < Keyword, if >
Token At 40:11 < Delimiter, ( >
Token At 40:12 < Identifier, check >
Token At 40:17 < Delimiter, ( >
Token At 40:18 < Identifier, mid >
Token At 40:21 < Delimiter, ) >
Token At 40:22 < Delimiter, ) >
Token At 41:13 < Identifier, lo >
Token At 41:15 < Operator, = >
Token At 41:16 < Identifier, mid >
Token At 41:19 < Delimiter, ; >
Token At 42:9 < Keyword, else >
Token At 43:13 < Identifier, hi >
Token At 43:15 < Operator, = >
Token At 43:16 < Identifier, mid >
Token At 43:19 < Operator, - >
Token At 43:20 < Integer Literal, 1 >
Token At 43:21 < Delimiter, ; >
Token At 44:5 < Delimiter, } >
Token At 45:5 < Keyword, return >
Token At 45:11 < Delimiter, ; >
Token At 46:1 < Delimiter, } >
